[ 2 2 3 4 ]
    ||
   \||/
[ 24 12 8 6 ]

24 = 2 * 3 * 4
12 = 1 * 3 * 4
8 = 1 * 2 * 4
6 = 1 * 2 * 3

switch to binary representation now

(a)(b)(c)(d)

for each index i in the input, we need to, in O(1) time, and
without division, return in the output one of the corresponding
entries in the following mapping:

[
    24 => 0[1(11)], (2)
    12 => 1011,
    8  => 1101,
    6  => 1110
]

so basically, our input is size N, and they want us to generate products that
come from N - 1 inputs. The inputs themselves are unique in their positions,
but looking at the binary representation of 'inclusion' we can see visually a 
significant overlap in left-right subwindows 

24 => 0111, which is 2 * 12...